/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/line/v2/bot/message/push": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description LINEにプッシュメッセージを送信する。
         *     LINEのMessaging APIを利用しているため詳細はLINEのドキュメントを参照。
         *     - [Messaging API | チャンネルアクセストークンv2.1を発行する](https://developers.line.biz/ja/reference/messaging-api/#issue-channel-access-token-v2-1)
         *     - [Messaging API | プッシュメッセージを送る](https://developers.line.biz/ja/reference/messaging-api/#send-push-message)
         *      */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description LINEチャンネルID。 */
                    "X-MessagingGateway-Line-Channel-Id": string;
                };
                path?: never;
                cookie?: never;
            };
            /** @description 送信するメッセージ内容。
             *     Messaging API準拠。
             *     - [Messaging API | プッシュメッセージを送る | リクエストボディ](https://developers.line.biz/ja/reference/messaging-api/#send-push-message-request-body)
             *      */
            requestBody: {
                content: {
                    "application/json": {
                        /** @description 送信先のID。
                         *     Webhookイベントオブジェクトで返される `userId` `groupId` `roomId` のいずれかの値。
                         *      */
                        to: string;
                        /** @description 送信するメッセージ。
                         *     最大5件。
                         *      */
                        messages: components["schemas"]["MessageObject"][];
                        /** @description メッセージ送信時のユーザー通知有無。デフォルトは`false`。
                         *      */
                        notificationDisabled?: boolean;
                        /** @description 任意の集計単位のユニット名。
                         *      */
                        customAggregationUnits?: string[];
                    };
                };
            };
            responses: {
                /** @description メッセージ送信成功。Messaging APIのレスポンスをそのまま返却します。
                 *     - [Messaging API | プッシュメッセージを送る | レスポンス](https://developers.line.biz/ja/reference/messaging-api/#send-push-message-response)
                 *      */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description 送信したメッセージの配列。 */
                            sentMessages?: components["schemas"]["SentMessageObject"][];
                        };
                    };
                };
                /** @description メッセージ送信に失敗。
                 *     - LINEチャンネルIDが存在しない。
                 *     - LINE Messaging API が 400 を返した。
                 *      */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorObject"];
                    };
                };
                /** @description リクエスト数が上限を超過した。
                 *      */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ErrorObject"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @description メッセージ情報。LINE Messaging API に準拠。
         *     - [Messaging API | メッセージオブジェクト](https://developers.line.biz/ja/reference/messaging-api/#message-objects)
         *      */
        MessageObject: unknown;
        /** @description 送信したメッセージ情報。 */
        SentMessageObject: {
            /** @description 送信したメッセージのID。 */
            id: number;
            /** @description メッセージの引用トークン。 */
            quoteToken?: string;
        };
        /** @description エラー情報。 */
        ErrorObject: {
            message: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
