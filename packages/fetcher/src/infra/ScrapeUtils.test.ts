import { nthMatch } from "./ScrapeUtils";

describe("nthMatch", () => {
  describe("正常系", () => {
    describe("gフラグなし", () => {
      describe("グループなし", () => {
        // 取得できるのは一致した最初の文字列だけ
        it.each`
          name                             | text                                | p             | n    | want
          ${"1つ目に一致した文字列の取得"} | ${"2023年01月02日〜2024年12月31日"} | ${/[0-9]+年/} | ${0} | ${"2023年"}
        `("$name", ({ text, p, n, want }) => {
          expect(nthMatch(text, p, n)).toEqual(want);
        });
      });
      describe("グループあり", () => {
        // 取得できるのは一致した最初の文字列の全体とグループだけ
        it.each`
          name                                     | text                                | p               | n    | want
          ${"1つ目に一致した文字列の全体取得"}     | ${"2023年01月02日〜2024年12月31日"} | ${/([0-9]+)年/} | ${0} | ${"2023年"}
          ${"1つ目に一致した文字列のグループ取得"} | ${"2023年01月02日〜2024年12月31日"} | ${/([0-9]+)年/} | ${1} | ${"2023"}
        `("$name", ({ text, p, n, want }) => {
          expect(nthMatch(text, p, n)).toEqual(want);
        });
      });
    });
    describe("gフラグあり", () => {
      describe("グループなし", () => {
        it.each`
          name                             | text                                | p              | n    | want
          ${"1つ目に一致した文字列の取得"} | ${"2023年01月02日〜2024年12月31日"} | ${/[0-9]+年/g} | ${0} | ${"2023年"}
          ${"2つ目に一致した文字列の取得"} | ${"2023年01月02日〜2024年12月31日"} | ${/[0-9]+年/g} | ${1} | ${"2024年"}
        `("$name", ({ text, p, n, want }) => {
          expect(nthMatch(text, p, n)).toEqual(want);
        });
      });
      describe("グループあり", () => {
        // 取得できるのは一致した文字列の全体のみ
        it.each`
          name                                 | text                                | p                | n    | want
          ${"1つ目に一致した文字列の全体取得"} | ${"2023年01月02日〜2024年12月31日"} | ${/([0-9])+年/g} | ${0} | ${"2023年"}
          ${"2つ目に一致した文字列の全体取得"} | ${"2023年01月02日〜2024年12月31日"} | ${/([0-9])+年/g} | ${1} | ${"2024年"}
        `("$name", ({ text, p, n, want }) => {
          expect(nthMatch(text, p, n)).toEqual(want);
        });
      });
    });
  });
  describe("異常系", () => {
    it.each`
      name                      | text                                | p             | n
      ${"不一致"}               | ${"2023年01月02日〜2024年12月31日"} | ${/aaaa/}     | ${0}
      ${"インデックスが範囲外"} | ${"2023年01月02日〜2024年12月31日"} | ${/[0-9]+年/} | ${2}
    `("$name", ({ text, p, n, want }) => {
      expect(() => {
        nthMatch(text, p, n);
      }).toThrow();
    });
  });
});
