openapi: "3.0.3"
info:
  title: messaging-gateway server
  version: "1.0"
servers:
  - url: http://localhost:3000
    description: local server
tags:
  - name: LINE Messaging API
    description: Messaging API の操作
  - name: LINE Webhook
    description: LINE Webhook 関連の操作
paths:
  /api/line/v2/bot/message/push:
    post:
      summary: LINEにプッシュメッセージを送信
      tags:
        - LINE Messaging API
      description: |
        LINEにプッシュメッセージを送信する。
        LINEのMessaging APIを利用しているため詳細はLINEのドキュメントを参照。
        - [Messaging API | チャンネルアクセストークンv2.1を発行する](https://developers.line.biz/ja/reference/messaging-api/#issue-channel-access-token-v2-1)
        - [Messaging API | プッシュメッセージを送る](https://developers.line.biz/ja/reference/messaging-api/#send-push-message)
      parameters:
        - in: header
          name: X-MessagingGateway-Line-Channel-Id
          description: LINEチャンネルID。
          required: true
          schema:
            type: string
      requestBody:
        description: |
          送信するメッセージ内容。
          Messaging API準拠。
          - [Messaging API | プッシュメッセージを送る | リクエストボディ](https://developers.line.biz/ja/reference/messaging-api/#send-push-message-request-body)
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                to:
                  description: |
                    送信先のID。
                    Webhookイベントオブジェクトで返される `userId` `groupId` `roomId` のいずれかの値。
                  type: string
                messages:
                  description: |
                    送信するメッセージ。
                    最大5件。
                  type: array
                  items:
                    $ref: "#/components/schemas/MessageObject"
                notificationDisabled:
                  description: |
                    メッセージ送信時のユーザー通知有無。デフォルトは`false`。
                  type: boolean
                customAggregationUnits:
                  description: |
                    任意の集計単位のユニット名。
                  type: array
                  items: { type: string }
              required:
                - to
                - messages
      responses:
        "200":
          description: |
            メッセージ送信成功。Messaging APIのレスポンスをそのまま返却します。
            - [Messaging API | プッシュメッセージを送る | レスポンス](https://developers.line.biz/ja/reference/messaging-api/#send-push-message-response)
          content:
            application/json:
              schema:
                type: object
                properties:
                  sentMessages:
                    description: 送信したメッセージの配列。
                    type: array
                    items:
                      $ref: "#/components/schemas/SentMessageObject"
        "400":
          description: |
            メッセージ送信に失敗。
            - LINEチャンネルIDが存在しない。
            - LINE Messaging API が 400 を返した。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
        "429":
          description: |
            リクエスト数が上限を超過した。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
        "500":
          description: 内部エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
  /api/line/webhook/{channelId}/messages/{messageId}:
    delete:
      summary: Webhookメッセージを削除
      tags:
        - LINE Webhook
      description: Webhookメッセージを削除する。
      parameters:
        - in: path
          name: channelId
          description: チャンネルID
          required: true
          schema:
            type: string
        - in: path
          name: messageId
          description: メッセージID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 削除成功
          content:
            application/json:
              schema:
                type: object
        "404":
          description: 指定されたWebhookメッセージが見つからない
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
        "500":
          description: 内部エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"

  /api/line/webhook/{channelId}/messages/new:
    get:
      summary: 新たに処理すべきWebhookメッセージを取得
      tags:
        - LINE Webhook
      description: |
        Webhookメッセージのうち指定コンシューマで新たに処理すべきものを取得する。
        取得対象メッセージは以下のもので、最大件数になるまで上から順に取得する。
        - 他コンシューマに配信済みメッセージのうちアイドル時間が最大アイドル時間を超えたもの
        - 未配信メッセージ

        |配信済み？|コンシューマ|アイドル時間|配信回数|取得対象？|備考|
        |---|---|---|---|---|---|
        |未|-|-|-|◯|処理するため取得する。配信数は1となる。|
        |済|指定|-|-|✕|自身で処理中のため取得しない。|
        |済|他|最大以下|-|✕|他コンシューマに任せるため取得しない。|
        |済|他|最大超過|最大以下|◯|リトライするため取得する。配信数は+1。|
        |済|他|最大超過|最大超過|✕|リトライしても回復の見込みが無いためエラー扱い。|
      parameters:
        - in: path
          name: channelId
          description: チャンネルID
          required: true
          schema:
            type: string
        - in: query
          name: consumer
          description: コンシューマ名。
          required: true
          schema:
            type: string
        - in: query
          name: max_count
          description: 取得件数の上限。省略時は上限なし扱い。
          required: false
          schema:
            type: number
        - in: query
          name: max_idle_time_ms
          description: アイドル時間（ms）の上限。省略時は1分扱い。
          required: false
          schema:
            type: number
        - in: query
          name: max_delivery_count
          description: 配信回数の上限。省略時は3回扱い。
          required: false
          schema:
            type: number
      responses:
        "200":
          description: 取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    description: Webhookメッセージのリスト。
                    type: array
                    items:
                      $ref: "#/components/schemas/WebhookMessageObject"
        "400":
          description: 必須パラメータの不足
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
        "500":
          description: 内部エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"

  /api/line/webhook/{channelId}/events:
    post:
      summary: Webhookメッセージを追加（LINE Webhookの受け口）
      tags:
        - LINE Webhook
      description: |
        LINEのWebhookからのPOSTリクエストを受信し、未読のWebhookメッセージとして保持する。
        POSTリクエストの仕様詳細はLINEのドキュメントを参照。
        - [Messaging API | Webhook](https://developers.line.biz/ja/reference/messaging-api/#webhooks)
      parameters:
        - in: path
          name: channelId
          description: チャンネルID
          required: true
          schema:
            type: string
        - in: header
          name: x-line-signature
          description: |
            署名の検証に使う署名
            - [Messaging API | 署名を検証する](https://developers.line.biz/ja/reference/messaging-api/#signature-validation)
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                destination:
                  description: Webhookイベントを受信すべきボットのユーザーID。
                  type: string
                events:
                  description: Webhookイベントオブジェクトの配列。
                  type: array
                  items:
                    $ref: "#/components/schemas/WebhookEventObject"
              required:
                - destination
                - events
      responses:
        "200":
          description: |
            POSTリクエストの受信成功。
          content:
            application/json:
              schema:
                type: object
        "400":
          description: |
            必須パラメータの不足
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
        "500":
          description: |
            内部エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorObject"
components:
  schemas:
    MessageObject:
      description: |
        メッセージ情報。LINE Messaging API に準拠。
        - [Messaging API | メッセージオブジェクト](https://developers.line.biz/ja/reference/messaging-api/#message-objects)
    SentMessageObject:
      description: 送信したメッセージ情報。
      type: object
      properties:
        id:
          description: 送信したメッセージのID。
          type: string
        quoteToken:
          description: メッセージの引用トークン。
          type: string
      required:
        - id
    WebhookEventObject:
      description: |
        LINEのWebhookイベントオブジェクト。
        - [Messaging API | Webhookイベントオブジェクト](https://developers.line.biz/ja/reference/messaging-api/#webhook-event-objects)
    WebhookMessageObject:
      description: LINEのWebhookで受信したメッセージ。
      type: object
      properties:
        messageId:
          description: メッセージID。
          type: string
        idleTimeMs:
          description: アイドル時間（ms）。配信されてからの経過時間のこと。
          type: number
        deliveryCount:
          description: 配信回数。
          type: number
        requestId:
          description: WebhookのPOSTリクエスト受信時にmessaging-gatewayで発行したリクエストID。
          type: string
        signature:
          description: WebhookのPOSTリクエストで受信した署名。
          type: string
        destination:
          description: Webhookイベントを受信すべきボットのユーザーID。
          type: string
        events:
          description: 受信したWebhookイベントオブジェクトの配列。
          type: array
          items:
            $ref: "#/components/schemas/WebhookEventObject"
      required:
        - requestId
        - signature
        - destination
        - events

    ErrorObject:
      description: エラー情報。
      type: object
      properties:
        message: { type: string }
      required:
        - message
