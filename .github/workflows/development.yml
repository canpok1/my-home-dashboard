name: CI for development

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CODE_DIR: dashboard

jobs:
  code_test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.CODE_DIR }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "npm"
          cache-dependency-path: "${{ env.CODE_DIR }}/package-lock.json"
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run lint

  db_test:
    runs-on: ubuntu-latest
    container:
      image: golang:1.20
    env:
      MYSQL_DATABASE: my-home
      MYSQL_USER: service
      MYSQL_PASSWORD: password
      MYSQL_HOST_ON_DOCKER_NETWORK: db
      MYSQL_PORT_ON_DOCKER_NETWORK: 3306
    services:
      db:
        image: mariadb:10.11
        env:
          MYSQL_RANDOM_ROOT_PASSWORD: "yes"
          MYSQL_DATABASE: my-home
          MYSQL_USER: service
          MYSQL_PASSWORD: password
        options: >
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 10s
          --health-retries 5
        ports:
          - 3306:3306
    steps:
      - uses: actions/checkout@v3
      - name: install migrate command
        run: go install -tags 'mysql' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
      - name: install tbls command
        run: go install github.com/k1LoW/tbls@latest
      - name: test migrate up
        working-directory: ./db
        run: make migrate-up
      - name: lint for database
        working-directory: ./db
        run: make lint
      - name: check diff between db and document
        run: make diff
      - name: test migrate down all
        working-directory: ./db
        run: make migrate options="down -all"

  build_and_push_to_ghcr:
    runs-on: ubuntu-latest
    needs: [code_test, db_test]
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./${{ env.CODE_DIR }}
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/${{ env.CODE_DIR }}:latest
